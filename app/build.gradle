plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
}

apply from: "../versions.gradle"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    namespace 'com.zavanton.photoapp'
    compileSdk 32

    defaultConfig {
        applicationId "com.zavanton.photoapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "API_KEY", localProperties['apiKey']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // androidx
    implementation androidx.core
    implementation androidx.activity_compose
    implementation androidx.compose_ui
    implementation androidx.compose_ui_tooling_preview
    implementation androidx.compose_material3
    debugImplementation androidx.compose_ui_tooling
    debugImplementation androidx.compose_ui_test_manifest

    // Coroutines
    implementation coroutines.core

    // Dagger
    implementation dagger.core
    kapt dagger.compiler

    // ViewModel
    implementation view_model.core

    // Annotation processor
    kapt lifecycle.compiler

    // Networking
    implementation retrofit.core
    implementation retrofit.moshi
    implementation retrofit.logging_interceptor

    // Moshi
    implementation moshi.core
    kapt moshi.kapt

    // TESTING
    // JUnit
    testImplementation junit.core
    androidTestImplementation junit.android

    // Mockito
    testImplementation mockito.core

    // Mockito-kotlin
    testImplementation mockito.kotlin

    // Espresso
    androidTestImplementation espresso.core

    // Compose junit
    androidTestImplementation androidx.compose_ui_test_junit
}